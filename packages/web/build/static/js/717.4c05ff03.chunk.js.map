{"version":3,"file":"static/js/717.4c05ff03.chunk.js","mappings":"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","sources":["image-effects.worker.ts","App.tsx","reportWebVitals.ts","index.tsx","../../image-effects/pkg/image_effects_bg.js"],"sourcesContent":["import * as imageEffects from \"@my-wasm/image-effects\";\n\nexport async function grayscale(file: File): Promise<string> {\n  if (!file) {\n    return Promise.reject(\"Invalid File\");\n  }\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.readAsDataURL(file);\n\n    fileReader.onloadend = () => {\n      const result = fileReader.result?.toString();\n      const base64 = result?.split(\",\").slice(1).join(\",\");\n\n      if (!base64) {\n        return reject(\"Invalid Image\");\n      }\n      const transformed = imageEffects.grayscale(base64);\n      resolve(transformed);\n    };\n\n    fileReader.onerror = reject;\n  });\n}\n","import React, { SyntheticEvent } from \"react\";\nimport \"./App.css\";\n\nimport * as imageEffects from \"./image-effects.worker\";\n\nfunction App() {\n  const [output, setOutput] = React.useState<string | null>(null);\n\n  const handleUpload = async (e: SyntheticEvent<HTMLInputElement>) => {\n    const file = e.currentTarget.files?.[0];\n\n    if (!file) {\n      return;\n    }\n\n    imageEffects\n      .grayscale(file)\n      .then(setOutput)\n      .catch(console.error.bind(null));\n  };\n\n  return (\n    <>\n      <div className=\"bg fixed inset-y-0 -inset-x-2/4 opacity-50 z-0 bg-gradient-to-r from-yellow-400 to-pink-500\" />\n      <div className=\"bg fixed inset-y-0 -inset-x-2/4 opacity-50 z-0 bg-gradient-to-r from-yellow-400 to-pink-500\" />\n      <div className=\"bg fixed inset-y-0 -inset-x-2/4 opacity-50 z-0 bg-gradient-to-r from-yellow-400 to-pink-500\" />\n      <div className=\"flex items-center justify-center h-screen relative z-100\">\n        <div className=\"bg-white bg-opacity-95 border shadow-lg p-10 text-center max-w-2xl\">\n          <h1 className=\"text-5xl mb-8\">Image Effects</h1>\n          <p className=\"mb-4\">\n            Need to do some basic image manipulation? Just upload your image\n            below. We'll take care of the rest.\n          </p>\n\n          <label className=\"bg-pink-600\ttext-white w-full p-6 block cursor-pointer font-bold mb-4\">\n            <input\n              type=\"file\"\n              id=\"upload\"\n              accept=\".png\"\n              className=\"hidden\"\n              onChange={handleUpload}\n            />\n            Upload PNG Image\n          </label>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            {output && (\n              <img\n                src={output}\n                className=\"w-auto mx-auto\"\n                alt={\"Your uploaded PNG in grayscale!\"}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as wasm from './image_effects_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* @param {string} encoded\n* @returns {string}\n*/\nexport function grayscale(encoded) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(encoded, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.grayscale(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction logError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n}\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_log_fbd13631356d44e4() { return logError(function (arg0) {\n    console.log(getObject(arg0));\n}, arguments) };\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"names":["grayscale","file","Promise","reject","resolve","fileReader","FileReader","readAsDataURL","onloadend","result","toString","base64","split","slice","join","transformed","imageEffects","onerror","React","output","setOutput","handleUpload","e","currentTarget","files","then","catch","console","error","bind","className","type","id","accept","onChange","style","display","flexDirection","alignItems","src","alt","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","reportWebVitals","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","getObject","idx","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","encoded","retptr","ptr0","malloc","realloc","Error","mem","offset","code","charCodeAt","passStringToWasm0","len0","r0","r1","logError","f","args","apply","this","message","stack","_","__wbindgen_string_new","arg0","arg1","obj","addHeapObject","__wbg_log_fbd13631356d44e4","log","arguments","__wbindgen_object_drop_ref","__wbindgen_throw"],"sourceRoot":""}